{"ast":null,"code":"var _jsxFileName = \"/Users/jackfagan/DriftHouseDigital/src/components/ContactForm.js\";\nimport React, { Component } from 'react';\nimport emailjs from 'emailjs-com';\n\n// Email validation\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\n\n// Form validation\nconst formValid = _ref => {\n  let {\n    formErrors,\n    ...rest\n  } = _ref;\n  let valid = true;\n\n  // Validate form errors being empty\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  });\n\n  // Validate the form was filled out\n  Object.values(rest).forEach(val => {\n    val === '' && (valid = false);\n  });\n  return valid;\n};\nclass ContactForm extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = e => {\n      e.preventDefault();\n      if (formValid(this.state)) {\n        // Handle form validation success\n        const {\n          name,\n          email,\n          number\n        } = this.state;\n\n        // Set template params\n        let templateParams = {\n          name: name,\n          email: email,\n          number: number\n        };\n        emailjs.send('service_cmtdixa', 'template_hb1dv4b', templateParams, 'user_hPRLmapB4SAjTHf4l51O5');\n        console.log(`\n        --SUBMITTING--\n        Name: ${name}\n        Email: ${email}\n        Number: ${number}\n\n      `);\n        this.resetForm();\n      } else {\n        // Handle form validation failure\n        console.error('FORM INVALID - DISPLAY ERROR MESSAGE');\n      }\n    };\n    this.handleChange = e => {\n      e.preventDefault();\n      const {\n        name,\n        value\n      } = e.target;\n      let formErrors = {\n        ...this.state.formErrors\n      };\n      switch (name) {\n        case 'name':\n          formErrors.name = value.length < 1 ? 'Please enter your name.' : '';\n          break;\n        case 'email':\n          formErrors.email = emailRegex.test(value) ? '' : 'Please enter a valid email address.';\n          break;\n        default:\n          break;\n      }\n      this.setState({\n        formErrors,\n        [name]: value\n      });\n    };\n    this.state = {\n      name: '',\n      email: '',\n      number: '',\n      formErrors: {\n        name: '',\n        email: ''\n      }\n    };\n  }\n  // Function to reset form\n  resetForm() {\n    this.setState({\n      name: '',\n      email: '',\n      subject: ''\n    });\n  }\n  render() {\n    const {\n      formErrors\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ContactForm\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"contact-form\",\n        onSubmit: this.handleSubmit,\n        noValidate: true,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-input-split\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-div high-columns\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"name\",\n                value: this.state.name,\n                className: `form-control formInput ${formErrors.name.length > 0 ? 'error' : null}`,\n                onChange: this.handleChange,\n                placeholder: \"Name\",\n                noValidate: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 19\n              }, this), formErrors.name.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"errorMessage\",\n                children: formErrors.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-div high-columns\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                name: \"email\",\n                value: this.state.email,\n                className: `form-control formInput ${formErrors.email.length > 0 ? 'error' : null}`,\n                onChange: this.handleChange,\n                placeholder: \"Email\",\n                noValidate: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 17\n              }, this), formErrors.email.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"errorMessage\",\n                children: formErrors.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-div\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"tel\",\n                name: \"number\",\n                value: this.state.number,\n                className: `form-control formInput`,\n                onChange: this.handleChange,\n                placeholder: \"Number\",\n                noValidate: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit-btn\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default ContactForm;","map":{"version":3,"names":["React","Component","emailjs","jsxDEV","_jsxDEV","emailRegex","RegExp","formValid","_ref","formErrors","rest","valid","Object","values","forEach","val","length","ContactForm","constructor","props","handleSubmit","e","preventDefault","state","name","email","number","templateParams","send","console","log","resetForm","error","handleChange","value","target","test","setState","subject","render","className","children","id","onSubmit","noValidate","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/jackfagan/DriftHouseDigital/src/components/ContactForm.js"],"sourcesContent":["import React, { Component } from 'react';\nimport emailjs from 'emailjs-com';\n\n// Email validation\nconst emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\n\n// Form validation\nconst formValid = ({ formErrors, ...rest }) => {\n  let valid = true;\n\n  // Validate form errors being empty\n  Object.values(formErrors).forEach((val) => {\n    val.length > 0 && (valid = false);\n  });\n\n  // Validate the form was filled out\n  Object.values(rest).forEach((val) => {\n    val === '' && (valid = false);\n  });\n\n  return valid;\n};\n\nclass ContactForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      number: '',\n      formErrors: {\n        name: '',\n        email: '',\n      },\n    };\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (formValid(this.state)) {\n      // Handle form validation success\n      const { name, email, number} = this.state;\n\n      // Set template params\n      let templateParams = {\n        name: name,\n        email: email,\n        number: number,\n      };\n      emailjs.send('service_cmtdixa', 'template_hb1dv4b', templateParams, 'user_hPRLmapB4SAjTHf4l51O5');\n\n      console.log(`\n        --SUBMITTING--\n        Name: ${name}\n        Email: ${email}\n        Number: ${number}\n\n      `);\n\n      this.resetForm();\n    } else {\n      // Handle form validation failure\n      console.error('FORM INVALID - DISPLAY ERROR MESSAGE');\n    }\n  };\n\n  // Function to reset form\n  resetForm() {\n    this.setState({\n      name: '',\n      email: '',\n      subject: '',\n    });\n  }\n\n  handleChange = (e) => {\n    e.preventDefault();\n    const { name, value } = e.target;\n    let formErrors = { ...this.state.formErrors };\n\n    switch (name) {\n      case 'name':\n        formErrors.name = value.length < 1 ? 'Please enter your name.' : '';\n        break;\n      case 'email':\n        formErrors.email = emailRegex.test(value) ? '' : 'Please enter a valid email address.';\n        break;\n      default:\n        break;\n    }\n    this.setState({ formErrors, [name]: value });\n  };\n\n  render() {\n    const { formErrors } = this.state;\n\n    return (\n      <div className='ContactForm'>\n        <form id='contact-form' onSubmit={this.handleSubmit} noValidate>\n          <div className=\"form-input-split\">\n            <label>\n              <div className=\"input-div high-columns\">\n                  <input\n                  type='text'\n                  name='name'\n                  value={this.state.name}\n                  className={`form-control formInput ${formErrors.name.length > 0 ? 'error' : null}`}\n                  onChange={this.handleChange}\n                  placeholder='Name'\n                  noValidate\n                ></input>\n                {formErrors.name.length > 0 && (\n                  <span className='errorMessage'>{formErrors.name}</span>\n                )}\n              </div>\n            </label>\n\n            <label>\n              <div className=\"input-div high-columns\">\n                <input\n                  type='email'\n                  name='email'\n                  value={this.state.email}\n                  className={`form-control formInput ${formErrors.email.length > 0 ? 'error' : null}`}\n                  onChange={this.handleChange}\n                  placeholder='Email'\n                  noValidate\n                ></input>\n                {formErrors.email.length > 0 && (\n                  <span className='errorMessage'>{formErrors.email}</span>\n                )}\n              </div>\n            </label>\n\n            <label>\n              <div className=\"input-div\">\n                <input\n                  type='tel'\n                  name='number'\n                  value={this.state.number}\n                  className={`form-control formInput`}\n                  onChange={this.handleChange}\n                  placeholder='Number'\n                  noValidate\n                ></input>\n              </div>\n            </label>\n          </div>\n          <button className='submit-btn' type='submit'>\n            Submit\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default ContactForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}